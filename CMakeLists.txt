PROJECT(AIRS)

# CMake version requirements
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

# For CMake 3.0, prefer rpath over loader_path on OS X
IF(POLICY CMP0042)
  CMAKE_POLICY(SET CMP0042 NEW)
ENDIF(POLICY CMP0042)

#SET(CMAKE_SKIP_RPATH ON CACHE BOOL "rpath not included in .so files" FORCE)

# Look for a VTK build directory
FIND_PACKAGE(VTK REQUIRED)
IF (VTK_FOUND)
  INCLUDE (${VTK_USE_FILE})
ENDIF (VTK_FOUND)

# Look for DICOM add-ons to VTK
OPTION(AIRS_USE_DICOM "Use DICOM in AIRS" OFF)
IF(AIRS_USE_DICOM)
  FIND_PACKAGE(DICOM QUIET)
  IF(DICOM_FOUND)
    INCLUDE(${DICOM_USE_FILE})
  ENDIF(DICOM_FOUND)
  # GDCM is required for reading compressed DICOM images
  OPTION(USE_GDCM "Use GDCM for image decompression" OFF)
  IF(USE_GDCM)
    FIND_PACKAGE(GDCM)
    IF(NOT GDCM_DIR)
      MESSAGE(FATAL_ERROR "Please set GDCM_DIR.")
    ENDIF(NOT GDCM_DIR)
    IF(GDCM_FOUND)
      INCLUDE(${GDCM_USE_FILE})
      SET(GDCM_LIBS gdcmMSFF gdcmIOD gdcmDSED gdcmDICT)
    ENDIF(GDCM_FOUND)
  ENDIF(USE_GDCM)
ENDIF(AIRS_USE_DICOM)

# Choose static or shared libraries.
OPTION(BUILD_SHARED_LIBS "Build shared libraries." OFF)
SET (AIRS_BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS})
IF (BUILD_SHARED_LIBS)
  SET (BUILD_SHARED_LIBS_CONFIG 1)
ELSE (BUILD_SHARED_LIBS)
  SET (BUILD_SHARED_LIBS_CONFIG 0)
ENDIF (BUILD_SHARED_LIBS)

# Build documentation
OPTION(BUILD_DOCUMENTATION "Build Documentation" OFF)
IF(BUILD_DOCUMENTATION)
  FIND_PACKAGE(VTK)
  IF (USE_VTK_FILE)
    INCLUDE (${USE_VTK_FILE})
  ELSE (USE_VTK_FILE)
    MESSAGE(FATAL_ERROR "This application requires VTK.")
  ENDIF (USE_VTK_FILE)
  ADD_SUBDIRECTORY(Documentation/Doxygen)
ENDIF(BUILD_DOCUMENTATION)

# Output directories.
SET(LIBRARY_OUTPUT_PATH ${AIRS_BINARY_DIR}/bin CACHE INTERNAL "Si